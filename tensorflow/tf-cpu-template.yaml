kind: Template
apiVersion: v1
metadata:
  name: tf-cpu
  annotations:
    openshift.io/display-name: Tensorflow
    description: Tensorflow
labels:
  template: tf-cpu

parameters:
- name: NAME
  description: Name
  required: true
  value: tf-cpu
- name: VERSION
  description: Version
  required: true
  value: "latest"
- name: RESOURCE_MEMORY_REQ
  description: The memory resource request.
  value: "1Gi"
- name: RESOURCE_MEMORY_LIMIT
  description: The limits for memory resource.
  value: "2Gi"
- name: RESOURCE_CPU_REQ
  description: The CPU resource request.
  value: "1"
- name: RESOURCE_CPU_LIMIT
  description: The limits for CPU resource.
  value: "2"

objects:
- apiVersion: v1
  kind: Service
  metadata:
    name: ${NAME}
    labels:
      app: ${NAME}
  spec:
    ports:
    - port: 8888
      name: ipython
    - port: 6006
      name: tensorboard
    clusterIP: None
    selector:
      app: ${NAME}

- apiVersion: v1
  kind: Pod
  metadata:
    name: ${NAME}
    labels:
      app: ${NAME}
  spec:
    containers:
    - name: ${NAME}
      imagePullPolicy: IfNotPresent
      image: gcr.io/tensorflow/tensorflow:${VERSION}
      command:
      - /bin/bash
      - -c
      args:
      - "tensorboard --logdir /tmp/tensorboard --host 0.0.0.0 --port 6006 & jupyter notebook --allow-root"
      resources:
        requests:
          memory: ${RESOURCE_MEMORY_REQ}
          cpu: ${RESOURCE_CPU_REQ}
        limits:
          memory: ${RESOURCE_MEMORY_LIMIT}
          cpu: ${RESOURCE_CPU_LIMIT}
      ports:
      - containerPort: 8888
        name: ipython
      - containerPort: 6006
        name: tensorboard
      readinessProbe:
        tcpSocket:
          port: 8888
        timeoutSeconds: 2
      livenessProbe:
        tcpSocket:
          port: 8888
        initialDelaySeconds: 3
        timeoutSeconds: 5
    restartPolicy: Never